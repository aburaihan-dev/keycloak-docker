version: '3.7'

services:
  postgres:
    image: postgres:16.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    command: start --hostname-strict false
    hostname: keycloak
    environment:
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HOSTNAME_PORT: 8443
      # KC_HTTP_RELATIVE_PATH: /auth
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_PROXY_HEADERS: 'xforwarded'
      KC_PROXY: edge
      PROXY_ADDRESS_FORWARDING: 'true'
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - 8080
      - 8443
    healthcheck:
      test:
      - "CMD-SHELL"
      - |
        exec 3<>/dev/tcp/localhost/9000 &&
        echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3 &&
        cat <&3 | tee /tmp/healthcheck.log | grep -q '200 OK'
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    # ports:
    #   - 8088:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak_network
      - proxy_network

volumes:
  postgres_data:
    driver: local

networks:
  keycloak_network:
    name: keycloak_network
  proxy_network:
    external: true
